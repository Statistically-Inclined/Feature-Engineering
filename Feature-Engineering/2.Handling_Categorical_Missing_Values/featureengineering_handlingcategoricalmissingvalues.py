# -*- coding: utf-8 -*-
"""FeatureEngineering-HandlingCategoricalMissingValues.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ulmknMLaaN4ri3Pf7LcP5hGmWWIIhV9j
"""

import pandas as pd
import numpy as np

df=pd.read_csv('loan.csv')

df.columns

df.select_dtypes(exclude = ['int', 'float']).columns

df.select_dtypes(include = ['int', 'float']).columns

df=pd.read_csv('loan.csv', usecols=['BsmtQual','FireplaceQu','GarageType','SalePrice'])

df.columns

df.shape

df.isnull().sum()

# Percentage of missing values
df.isnull().mean().sort_values(ascending=True)

"""### Compute the frequency with every feature"""

df['BsmtQual'].value_counts().plot.bar()

df['GarageType'].value_counts().plot.bar()

df['FireplaceQu'].value_counts().plot.bar()

"""FREQUENT CATEGORY IMPUTATION"""

df['GarageType'].value_counts().index[:]

df['GarageType'].mode()[0]

def impute_nan(df,variable):
    most_frequent_category = df[variable].mode()[0]
    # df[variable].fillna(most_frequent_category,inplace=True)
    df[variable+'_mode'] = df[variable].fillna(most_frequent_category)

for feature in ['BsmtQual','FireplaceQu','GarageType']:
    impute_nan(df,feature)

# Percentage of null values
df.isnull().sum()

"""CAPTURING NULL VALUES WITH A NEW FEATURE WITH FREQUENT CATEGORY IMPUTATION"""

def impute_newvar(df,variable):
  df[variable+"_Var"] = np.where(df[variable].isnull(),1,0)

for feature in ['BsmtQual','FireplaceQu','GarageType']:
    impute_newvar(df,feature)

df.head()

df['BsmtQual'].mode()[0]

def impute_nan(df,variable):
    most_frequent_category = df[variable].mode()[0]
    # df[variable].fillna(most_frequent_category,inplace=True)
    df[variable+'_mode'] = df[variable].fillna(most_frequent_category)

for feature in ['BsmtQual','FireplaceQu','GarageType']:
    impute_nan(df,feature)

df.head()

"""FOR MORE FREQUENT CATEGORIES, REPLACE NAN WITH A NEW CATEGORY"""

df=pd.read_csv('loan.csv', usecols=['BsmtQual','FireplaceQu','GarageType','SalePrice'])

df.head()

def impute_nan(df,variable):
    df[variable+"newvar"]=np.where(df[variable].isnull(),"Missing",df[variable])

for feature in ['BsmtQual','FireplaceQu','GarageType']:
    impute_nan(df,feature)

df.head()

# df = df.drop(['BsmtQual','FireplaceQu','GarageType'],axis=1)

df.BsmtQualnewvar.value_counts()

